{
  "title": "Webcam",
  "description": "An example of using Gemini Kit's vision node with a webcam",
  "version": "0.1.0",
  "edges": [
    {
      "from": "generator",
      "to": "output-0",
      "out": "result",
      "in": "text"
    },
    {
      "from": "input-0",
      "to": "runJavascript-0",
      "out": "picture",
      "in": "picture"
    },
    {
      "from": "input-0",
      "to": "runJavascript-0",
      "out": "prompt",
      "in": "prompt"
    },
    {
      "from": "llm-generator",
      "to": "generator",
      "out": "generator",
      "in": "$board"
    },
    {
      "from": "runJavascript-0",
      "to": "generator",
      "out": "parts",
      "in": "parts"
    }
  ],
  "nodes": [
    {
      "id": "input-0",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "picture": {
              "type": "object",
              "behavior": [
                "llm-content"
              ],
              "title": "Image",
              "properties": {},
              "required": [],
              "additionalProperties": false
            },
            "prompt": {
              "type": "string",
              "title": "Prompt",
              "examples": [
                "Describe what you see in the picture"
              ]
            }
          },
          "required": [
            "picture",
            "prompt"
          ]
        }
      }
    },
    {
      "id": "llm-generator",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "generator": {
              "type": "object",
              "behavior": [
                "board"
              ],
              "title": "Generator",
              "description": "The URL of the generator to call",
              "default": "{\n  \"kind\": \"board\",\n  \"path\": \"gemini-pro-vision.json\"\n}",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": []
        }
      }
    },
    {
      "id": "output-0",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "text"
          ]
        }
      }
    },
    {
      "id": "generator",
      "type": "invoke",
      "configuration": {}
    },
    {
      "id": "runJavascript-0",
      "type": "runJavascript",
      "configuration": {
        "code": "const run = ({picture:picture2,prompt:prompt2})=>{return{parts:[picture2,prompt2]}};",
        "inputSchema": {
          "type": "object",
          "properties": {
            "picture": {
              "behavior": [
                "llm-content"
              ],
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            },
            "prompt": {
              "type": "string"
            }
          }
        },
        "name": "run",
        "outputSchema": {
          "type": "object",
          "properties": {
            "parts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": false
              }
            }
          }
        },
        "raw": true
      }
    }
  ]
}