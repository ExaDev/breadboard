{
	"title": "AudioTranscriptBoard",
	"description": "Breadboard for generating transcript from audio file",
	"edges": [
		{
			"from": "main",
			"to": "output-2",
			"out": "output",
			"in": "output"
		},
		{
			"from": "fn-3",
			"to": "main",
			"out": "result",
			"in": "result"
		},
		{
			"from": "query",
			"to": "fn-3",
			"out": "data",
			"in": "data"
		},
		{
			"from": "query",
			"to": "fn-3",
			"out": "apiKey",
			"in": "apiKey"
		}
	],
	"nodes": [
		{
			"id": "output-2",
			"type": "output",
			"configuration": {
				"schema": {
					"type": "object",
					"properties": {
						"output": {
							"type": "string",
							"title": "output"
						}
					}
				}
			}
		},
		{
			"id": "main",
			"type": "output",
			"configuration": {
				"schema": {
					"type": "object",
					"properties": {
						"result": {
							"type": "string",
							"title": "result"
						}
					}
				}
			}
		},
		{
			"id": "fn-3",
			"type": "invoke",
			"configuration": {
				"$board": "#fn-3"
			}
		},
		{
			"id": "query",
			"type": "input",
			"configuration": {
				"schema": {
					"title": "Hugging Face Schema For Audio Transcript",
					"properties": {
						"data": {
							"type": "[Blob]",
							"title": "inputs",
							"description": "The audio file to transcribe as Blob"
						},
						"apiKey": {
							"type": "string",
							"title": "apiKey",
							"default": "myKey",
							"description": "The hugging face api key"
						}
					}
				},
				"type": "string"
			}
		}
	],
	"graphs": {
		"fn-3": {
			"edges": [
				{
					"from": "fn-3-input",
					"to": "fn-3-run",
					"out": "*"
				},
				{
					"from": "fn-3-run",
					"to": "fn-3-output",
					"out": "*"
				}
			],
			"nodes": [
				{
					"id": "fn-3-input",
					"type": "input",
					"configuration": {}
				},
				{
					"id": "fn-3-run",
					"type": "runJavascript",
					"configuration": {
						"code": "async function fn_3(input) {const{data,apiKey}=input;const arrayBuffer=await data.arrayBuffer();const buffer=Buffer.from(arrayBuffer);const response=await fetch(\"https://api-inference.huggingface.co/models/facebook/wav2vec2-base-960h\",{headers:{Authorization:`Bearer ${apiKey}`},method:\"POST\",body:buffer});const result=await response.json();return{result}}",
						"name": "fn_3",
						"raw": true
					}
				},
				{
					"id": "fn-3-output",
					"type": "output",
					"configuration": {}
				}
			]
		}
	}
}